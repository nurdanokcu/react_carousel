{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Input/Input.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","handleButtons","direction","props","images","step","frameSize","itemWidth","infinite","sizeOfHiddenRegion","length","setState","newTransform","Math","min","max","handlePrevButton","handleNextButton","this","animationDuration","visibleCarouselWidth","className","style","width","transition","gap","map","image","index","src","alt","height","type","onClick","disabled","Component","Input","labelText","id","name","value","onChange","htmlFor","Form","handleChange","handleInfinite","checked","App","event","target","Number","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bb5e99d1.chunk.js","sourcesContent":["import { Component } from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\ntype State = {\n  transform: number;\n};\n\nexport class Carousel extends Component<Props, State> {\n  state: Readonly<State> = {\n    transform: 0,\n  };\n\n  handleButtons = (direction: 'prev' | 'next') => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const sizeOfHiddenRegion = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => {\n      const newTransform = direction === 'prev'\n        ? Math.min(state.transform + (itemWidth * step), 0)\n        : Math.max(state.transform - (itemWidth * step), -sizeOfHiddenRegion);\n\n      if (newTransform === 0 && direction === 'prev' && infinite) {\n        return { transform: -sizeOfHiddenRegion };\n      }\n\n      if (newTransform === -sizeOfHiddenRegion\n            && direction === 'next'\n            && infinite\n      ) {\n        return { transform: 0 };\n      }\n\n      return { transform: newTransform };\n    });\n  };\n\n  handlePrevButton = () => {\n    this.handleButtons('prev');\n  };\n\n  handleNextButton = () => {\n    this.handleButtons('next');\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    const visibleCarouselWidth = itemWidth * frameSize;\n\n    const sizeOfHiddenRegion = (images.length - frameSize) * itemWidth;\n\n    return (\n      <div\n        className=\"Carousel\"\n        style={{ width: `${visibleCarouselWidth}px` }}\n      >\n        <ul\n          className=\"Carousel__list\"\n          style={{\n            transform: `translateX(${transform}px)`,\n            transition: `${animationDuration}ms`,\n            gap: '1px',\n          }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n            >\n              <img\n                src={image}\n                alt={`emjoji-${index + 1}`}\n                width={itemWidth}\n                height={itemWidth}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handlePrevButton}\n            disabled={transform === 0 && !infinite}\n          >\n            {'<'}\n          </button>\n\n          <button\n            data-cy=\"next\"\n            type=\"button\"\n            className=\"Carousel__button\"\n            onClick={this.handleNextButton}\n            disabled={transform === -sizeOfHiddenRegion\n              && !infinite}\n          >\n            {'>'}\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Input.scss';\n\ntype Props = {\n  labelText: string;\n  id: string;\n  name: string;\n  value: string | number;\n  min: string;\n  max: string;\n  step: string\n  onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const Input:React.FC<Props> = ({\n  labelText,\n  id,\n  name,\n  value,\n  min,\n  max,\n  step,\n  onChange,\n}) => (\n  <label htmlFor={id}>\n    {labelText}\n    <input\n      className=\"Input\"\n      id={id}\n      type=\"number\"\n      name={name}\n      value={value}\n      min={min}\n      max={max}\n      step={step}\n      onChange={onChange}\n    />\n  </label>\n\n);\n","import React from 'react';\nimport { Input } from '../Input';\nimport './Form.scss';\nimport '../Input/Input.scss';\n\ntype Props = {\n  itemWidth: number;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n  infinite: boolean;\n  handleInfinite: () => void;\n};\n\nexport const Form:React.FC<Props> = ({\n  itemWidth,\n  handleChange,\n  frameSize,\n  step,\n  animationDuration,\n  images,\n  infinite,\n  handleInfinite,\n}) => (\n  <form className=\"Form\">\n    <Input\n      labelText=\"Item width:\"\n      id=\"itemId\"\n      name=\"itemWidth\"\n      value={itemWidth}\n      min=\"100\"\n      max=\"200\"\n      step=\"5\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Frame size:\"\n      id=\"frameId\"\n      name=\"frameSize\"\n      value={frameSize}\n      min=\"1\"\n      max={`${images.length}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Step:\"\n      id=\"stepId\"\n      name=\"step\"\n      value={step}\n      min=\"1\"\n      max={`${images.length - frameSize}`}\n      step=\"1\"\n      onChange={handleChange}\n    />\n\n    <Input\n      labelText=\"Animation duration:\"\n      id=\"animationId\"\n      name=\"animationDuration\"\n      value={animationDuration}\n      min=\"100\"\n      max=\"5000\"\n      step=\"100\"\n      onChange={handleChange}\n    />\n\n    <label>\n      Infinite:\n      <input\n        className=\"Form--checkbox\"\n        type=\"checkbox\"\n        name=\"infinite\"\n        checked={infinite}\n        onChange={handleInfinite}\n      />\n    </label>\n  </form>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState(state => ({\n      ...state,\n      [event.target.name]: Number(event.target.value),\n    }));\n  };\n\n  handleInfinite = () => {\n    this.setState(state => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1\n          data-cy=\"title\"\n        >\n          {`Carousel with ${images.length} images`}\n        </h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          images={images}\n          infinite={infinite}\n          handleChange={this.handleChange}\n          handleInfinite={this.handleInfinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}