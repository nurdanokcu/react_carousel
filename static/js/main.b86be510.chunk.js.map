{"version":3,"sources":["components/Carousel/Carousel.tsx","components/Form/Form.tsx","App.tsx","index.tsx"],"names":["Carousel","state","transform","handlePrevClick","props","images","step","frameSize","itemWidth","infinite","hiddenImagesSize","length","setState","Math","min","handleNextClick","max","this","animationDuration","className","style","width","map","image","index","transition","src","alt","type","onClick","disabled","React","Component","Form","handleChange","handleInfinite","name","value","onChange","checked","App","event","target","Number","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b86be510.chunk.js","sourcesContent":["import React from 'react';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[];\n  step: number;\n  frameSize:number;\n  itemWidth:number;\n  animationDuration:number;\n  infinite:boolean;\n};\n\ntype State = {\n  transform: number;\n};\n\nexport class Carousel extends React.Component<Props, State> {\n  state = {\n    transform: 0,\n  };\n\n  handlePrevClick = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      transform: Math.min(state.transform + itemWidth * step, 0),\n    }));\n\n    if (this.state.transform === 0 && infinite) {\n      this.setState({ transform: -hiddenImagesSize });\n    }\n  };\n\n  handleNextClick = () => {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      infinite,\n    } = this.props;\n\n    const hiddenImagesSize = (images.length - frameSize) * itemWidth;\n\n    this.setState((state) => ({\n      transform: Math.max(state.transform - (itemWidth * step),\n        -hiddenImagesSize),\n    }));\n\n    if (this.state.transform === -hiddenImagesSize && infinite) {\n      this.setState({ transform: 0 });\n    }\n  };\n\n  render() {\n    const {\n      images,\n      frameSize,\n      itemWidth,\n      infinite,\n      animationDuration,\n    } = this.props;\n\n    const { transform } = this.state;\n\n    return (\n      <div className=\"Carousel\">\n        <ul\n          className=\"Carousel__list\"\n          style={{ width: `${frameSize * itemWidth}px` }}\n        >\n          {images.map((image, index) => (\n            <li\n              key={image}\n              style={{\n                transform: `translateX(${transform}px)`,\n                transition: `${animationDuration}ms`,\n              }}\n            >\n              <img\n                src={image}\n                alt={`emoji-${index + 1}`}\n                style={{ width: `${itemWidth}px` }}\n              />\n            </li>\n          ))}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className=\"Carousel__button Carousel__button--prev\"\n            type=\"button\"\n            onClick={this.handlePrevClick}\n            disabled={transform === 0 && !infinite}\n          >\n            &#8249;\n          </button>\n\n          <button\n            data-cy=\"next\"\n            className=\"Carousel__button Carousel__button--next\"\n            type=\"button\"\n            onClick={this.handleNextClick}\n            disabled={\n              transform === -(images.length - frameSize) * itemWidth\n              && !infinite\n            }\n          >\n            &#8250;\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './Form.scss';\n\ntype Props = {\n  itemWidth: number;\n  handleChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n  images: string[];\n  infinite: boolean;\n  handleInfinite: () => void;\n};\n\nexport const Form:React.FC<Props> = ({\n  itemWidth,\n  handleChange,\n  frameSize,\n  step,\n  animationDuration,\n  images,\n  infinite,\n  handleInfinite,\n}) => (\n  <form className=\"Form\">\n    <label>\n      Item width:\n      <input\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"itemWidth\"\n        value={itemWidth}\n        min=\"100\"\n        max=\"200\"\n        onChange={handleChange}\n      />\n    </label>\n\n    <label>\n      Frame size:\n      <input\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"frameSize\"\n        value={frameSize}\n        min=\"1\"\n        max={images.length}\n        onChange={handleChange}\n      />\n    </label>\n\n    <label>\n      Step:\n      <input\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"step\"\n        value={step}\n        min=\"1\"\n        max={images.length - frameSize}\n        onChange={handleChange}\n      />\n    </label>\n\n    <label>\n      Animation duration:\n      <input\n        className=\"Form__input\"\n        type=\"number\"\n        name=\"animationDuration\"\n        value={animationDuration}\n        min=\"100\"\n        max=\"5000\"\n        step=\"100\"\n        onChange={handleChange}\n      />\n    </label>\n\n    <label>\n      Infinite:\n      <input\n        className=\"Form__input\"\n        type=\"checkbox\"\n        name=\"infinite\"\n        checked={infinite}\n        onChange={handleInfinite}\n      />\n    </label>\n  </form>\n);\n","import React from 'react';\nimport './App.scss';\nimport { Carousel } from './components/Carousel';\nimport { Form } from './components/Form';\n\ninterface State {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n  infinite: boolean;\n}\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n\n    step: 3,\n    frameSize: 3,\n    itemWidth: 130,\n    animationDuration: 1000,\n    infinite: false,\n  };\n\n  handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState((state) => ({\n      ...state,\n      [event.target.name]: Number(event.target.value),\n    }));\n  };\n\n  handleInfinite = () => {\n    this.setState((state) => ({\n      infinite: !state.infinite,\n    }));\n  };\n\n  render() {\n    const {\n      images,\n      step,\n      frameSize,\n      itemWidth,\n      animationDuration,\n      infinite,\n    } = this.state;\n\n    return (\n      <div className=\"App\">\n        {/* eslint-disable-next-line */}\n        <h1>Carousel with {images.length} images</h1>\n\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n          infinite={infinite}\n        />\n\n        <Form\n          itemWidth={itemWidth}\n          frameSize={frameSize}\n          step={step}\n          animationDuration={animationDuration}\n          images={images}\n          infinite={infinite}\n          handleChange={this.handleChange}\n          handleInfinite={this.handleInfinite}\n        />\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}